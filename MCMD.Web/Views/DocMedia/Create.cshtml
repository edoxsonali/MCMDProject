@model MCMD.ViewModel.Administration.MediaViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_DoctorLayout.cshtml";
}

@{

    int Pages = 10;
    WebGrid grid = new WebGrid(Model.GetMedialist, canPage: true, rowsPerPage: Pages);
    grid.Pager(WebGridPagerModes.NextPrevious);
}

<script type="text/javascript">

    //Delete User on click
    function DeleteUserData(varid) {
        if (varid != null) {
            if (confirm('Are you sure want to delete the selected user')) {
                var deleteInputs = [];
                //$('.chkview:checked').each(function (i, chk) {
                deleteInputs.push(varid);
                //});
                var url = '@Url.Action("BatchDelete", "DocMedia")';
                $.ajax({
                    type: "POST",
                    async: false,
                    cache: false,
                    url: url,
                    traditional: true,
                    data: { deleteInputs: deleteInputs },
                    success: function (data) {
                        var url = '@Url.Action("Create", "DocMedia")';
                        window.location.href = url;

                    }
                });
            }
        }
    }

</script>

<!-- BEGIN PAGE CONTAINER-->
<div class="container-fluid">
    <!-- BEGIN PAGE HEADER-->
    <div class="row-fluid">
        <div class="span12">

            <h3 class="page-title"></h3>
            <ul class="breadcrumb">
                <li>
                    <i class="icon-home"></i>
                    <a href="">Home</a>
                    <span class="icon-angle-right"></span>
                </li>
                <li>
                    <a href="#">My Profile</a>
                    <span class="icon-angle-right"></span>
                </li>
                <li>
                    <a href="#">Media</a>
                    <span class="icon-angle-right"></span>
                </li>
            </ul>
        </div>

    </div>
    <div class="well">
        <span class="label label-important">NOTE!</span>
        <span>
            <span class="bold">Video Uploading Size is 1GB </span>

        </span>
    </div>
    <div>
        <span class="text-success">@TempData["SuccessMessage"]</span>
        <span class="text-success">@TempData["AddNewItemMessage"]</span>
        <span class="text-error">@TempData["Message"]</span>
    </div>
    <!-- END PAGE HEADER-->
    <!-- BEGIN PAGE CONTENT-->
    <div class="portlet box blue ">
        <div class="portlet-title">
            <div class="caption"><i class="icon-reorder"></i> Upload Photo and Video</div>

        </div>

        <div class="portlet-body form">
            <!-- BEGIN FORM-->
            @using (Html.BeginForm(Html.BeginForm("Create", "DocMedia",
            new { ReturnUrl = ViewBag.ReturnUrl },
            FormMethod.Post, new { @class = "form-horizontal form-bordered", enctype = "multipart/form-data" })))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="control-group">
                    <label class="control-label">Clinic Name<span class="required">*</span></label>
                    <div class="controls">

                        <input id="ImagePath" title="Upload a product image"
                               type="file" name="file" />

                    </div>
                </div>

                <div class="form-actions">

                    <button type="Submit" id="btnCreate" class="btn blue" name="btnCreate">Submit</button>

                    <button type="button" id="btnscd" class="btn" name="btnscd" onclick="location.href='@Url.Action("Create", "DocMedia")'">Reset</button>
                </div>
            }

            <!-- END FORM-->
        </div>


    </div>
    <div class="portlet">

        <div class="portlet-body">
            @grid.GetHtml(
                                                   tableStyle: "table table-striped table-bordered table-advance table-hover",
                                         footerStyle: "gridFooter",
                                                alternatingRowStyle: "alt",
                                                 htmlAttributes: new { id = "grdUsers" },
                                                 mode: WebGridPagerModes.All,
                                                 firstText: "<< First",
                            previousText: "< Previous", nextText: "Next >",
                            lastText: "Last >>",
                                             columns: new[] {


                                              grid.Column("FolderFilePath", header: "Image",

                 format: (item) =>
                 {
                     return Html.Raw(string.Format("<text><img src=\"{0}\" alt=\"Image\" width='100px' height='100px'/></text>", Url.Content(@item.FolderFilePath)));
                 }
                ),

                                                                                     grid.Column(header: "Option", format: @<text>


                    <a id="btnDelete" style="cursor:pointer;" onclick="DeleteUserData( @item.MediaId)">Delete</a>
                                                                                    </text>)
                                        })

        </div>

    </div>

    <!-- END PAGE CONTENT-->
</div>
<!-- END PAGE CONTAINER-->
@*@using (Html.BeginForm("Create", "Media", null, FormMethod.Post,
                                  new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()


        <div class="container">
            <div class="login-container">
                <div class="form-container">

                    <h2>Image and Video uploading</h2>
                    <hr />
                    <div style="font-size:large;color:#1f317f">
                        @TempData["UserName"]
                    </div>

                    <h5 class="text-success">[ Note - Video Uploading Size is 1GB ]</h5>
                    <div class="form-horizontal">
                        <div class="validation-summary">@Html.ValidationSummary(true)</div>
                        <div class="form-group">

                            <div class="col-sm-6 input-group">

                                <input id="ImagePath" title="Upload a product image"
                                       type="file" name="file" />
                            </div>
                        </div>




                        <span class="fancybox-error" style="color:red;">

                            @TempData["Message"]

                        </span>
                        <div class="form-group">

                            <div class="col-md-offset-2 col-md-10">
                                <button type="button" id="btnscd" name="btnscd" onclick="location.href='@Url.Action("ViewDoctor", "User")'">Back</button>
                                <button type="Submit" id="btnSave" name="btnRegister">Submit</button>
                                <button type="button" id="btnscd" name="btnscd" onclick="location.href='@Url.Action("Create", "UpgradeService")'">Next</button>

                            </div>
                        </div>

                    </div>
                </div>


            </div>
            <div class="form">
                <div class="col-sm-12">
                    <div class="data-table">

                        @grid.GetHtml(
                                               tableStyle: "footable",
                                             footerStyle: "gridFooter",
                                                    alternatingRowStyle: "alt",
                                                     htmlAttributes: new { id = "grdUsers" },
                                                     mode: WebGridPagerModes.All,
                                                   firstText: "<< First",
                                previousText: "< Previous", nextText: "Next >",
                                lastText: "Last >>",
                                                 columns: new[] {
                                                // grid.Column("MediaId",header: "Media Id", canSort: false),
                                              //   grid.Column("LoginId",header: "Login Id", canSort: false),
                                               //  grid.Column("FolderFilePath",header: "Folder File Path", canSort: false),

                                                  grid.Column("FolderFilePath", header: "Image",

                     format: (item) =>
                     {
                         return Html.Raw(string.Format("<text><img src=\"{0}\" alt=\"Image\" width='100px' height='100px'/></text>", Url.Content(@item.FolderFilePath)));
                     }
                    ),

                                                                                         grid.Column(header: "Option", format: @<text>


                        <a id="btnDelete" style="cursor:pointer;" onclick="DeleteUserData( @item.MediaId)">Delete</a>
                                                                                        </text>)
                                            })



                    </div>
                </div>
            </div>
        </div>




    }*@


@Scripts.Render("~/bundles/jqueryval")

