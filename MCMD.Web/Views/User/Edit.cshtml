@model MCMD.EntityModel.Administration.User

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container">
    <div class="content">

    @using (Html.BeginForm())
        {
        @Html.AntiForgeryToken()
        <div class="form">
            <div class="col-sm-8">

                <div class="form-horizontal">
                    <h4>Edit User</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.UserId)

                    <div class="form-group">
                        <div class="col-sm-3 control-label">First Name<b>:</b></div>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            <span id="RolelabelFirstName" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">First Name is required.</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">Last Name<b>:</b></div>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            <span id="RolelabelFirstName" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">First Name is required.</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">Email ID<b>:</b></div>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                            <span id="RolelabelFirstName" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">First Name is required.</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">Employee ID<b>:</b></div>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                            <span id="RolelabelFirstName" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">First Name is required.</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">Password<b>:</b></div>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            <span id="RolelabelFirstName" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">First Name is required.</span>
                        </div>
                    </div>
                 
                    <div class="form-group">
                        <div class="col-sm-3 control-label">ConfirmPassword<b>:</b></div>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            <span id="RolelabelFirstName" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">First Name is required.</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">User Role<b>:</b></div>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.UserRole, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserRole, "", new { @class = "text-danger" })
                            <span id="RolelabelFirstName" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">First Name is required.</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-3 control-label">Status<b>:</b></div>
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            <span id="RolelabelFirstName" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">First Name is required.</span>
                        </div>
                    </div>
                   

                    <div class="form-group">
                            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    <div class="form-group">
                            @Html.LabelFor(model => model.CreatedID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CreatedID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CreatedID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    <div class="form-group">
                            @Html.LabelFor(model => model.ModifyedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ModifyedDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ModifyedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    <div class="form-group">
                            @Html.LabelFor(model => model.ModifiedID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ModifiedID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ModifiedID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                          
                            <div class="buttons">
                                <button type="Submit" id="btnEdit" name="btnEdit">Edit User</button>
                               
                            </div>
                        </div>
                    </div>
                </div>
               </div>
            </div>
                }
                <div class="clear"></div>
                <div>
                    @Html.ActionLink("Back to List", "Index")
                    <hr />
                </div>
            </div>
        </div>
