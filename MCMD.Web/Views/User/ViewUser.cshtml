@model MCMD.ViewModel.Administration.UserDetailsViewModel

@{
    ViewBag.Title = "ViewUser";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{

    int Pages = 10;
    WebGrid grid = new WebGrid(Model.GetViewUsers, canPage: true, rowsPerPage: Pages);
    grid.Pager(WebGridPagerModes.NextPrevious);
}
@section Scripts
{
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.reveal.js")"></script>
    <link rel="stylesheet" href="@Url.Content("~/Content/reveal.css")" />
    <link rel="stylesheet" href="@Url.Content("~/Content/custom-styles.css")" />

    <script type="text/javascript">

        //Delete User on click
        function DeleteUserData(varid) {
            if (varid != null) {
                if (confirm('Are you sure want to delete the selected user')) {
                    var deleteInputs = [];
                    //$('.chkview:checked').each(function (i, chk) {
                    deleteInputs.push(varid);
                    //});
                    var url = '@Url.Action("BatchDelete", "User")';
                    $.ajax({
                        type: "POST",
                        async: false,
                        cache: false,
                        url: url,
                        traditional: true,
                        data: { deleteInputs: deleteInputs },
                        success: function (data) {
                            var url = '@Url.Action("ViewUser", "User")';
                            window.location.href = url;

                        }
                    });
                }
            }
        }

       
        $(document).ready(function () {
            if ('@ViewBag.DeleteMessage' != '') {
                $('#uploadModal').reveal({
                    closeonbackgroundclick: false,
                    dismissmodalclass: 'close-reveal-modal'
                });
            }
        });
    </script>
<script type="text/javascript">

    function EditUserData(varid) {
        if (varid != null) {
            if (confirm('Are you sure want to edit the details selected user')) {
                var Inputs = [];
                //$('.chkview:checked').each(function (i, chk) {
                Inputs.push(varid);
                //});
                var url = '@Url.Action("EditUserData", "User")';
                $.ajax({
                    type: "POST",
                    async: false,
                    cache: false,
                    url: url,
                    traditional: true,
                    data: { Id: Inputs },
                    success: function (data) {
                        // alert(data)
                        if (data.isRedirect == true) {
                            window.location = data.redirectUrl;
                        }
                        //  window.location.reload();
                    }
                });
            }
        }
    }
</script>

@Scripts.Render("~/bundles/jqueryval")
}



<div class="container">
    <div class="content">
        <h2>Manage Admin/COE</h2>
       
        @using (Html.BeginForm())
        {

            <div class="form">
                <div class="col-sm-12">

                    <hr />
                    <div class="col-sm-6">
                        <div class="form-group">
                            <div class="col-sm-3 control-label">User Type<span>*</span><b>:</b></div>
                            <div class="col-sm-6">
                                @Html.DropDownListFor(m => m.RoleId, new SelectList(Model.Roles, "RoleId", "RoleName"),
                                "-Select-", new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.RoleId, string.Empty)
                                <span id="RolelabelFirstName" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">First Name is required.</span>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3 control-label">Employee Id<span>*</span><b>:</b></div>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(u => u.EmployeeId, new { @class = "form-control", @placeholder = "Enter Employee Id", @maxlength = "30", @autocomplete = "off" })
                                @Html.ValidationMessageFor(u => u.EmployeeId, string.Empty)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3 control-label">Phone No<b>:</b></div>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(u => u.UserPhone, new { @class = "form-control",  @placeholder = "Enter Phone No", @maxlength = "40", @autocomplete = "off" })
                                @Html.ValidationMessageFor(u => u.UserPhone, string.Empty)
                            </div>
                        </div>
                        </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <div class="col-sm-3 control-label">First Name<b>:</b></div>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(u => u.FirstName, new { @class = "form-control", @placeholder = "Enter First Name", @maxlength = "50", autocomplete = "off" })
                                @Html.ValidationMessageFor(u => u.FirstName, string.Empty)

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3 control-label">Last Name<b>:</b></div>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(u => u.LastName, new { @class = "form-control", @placeholder = "Enter Last Name", @maxlength = "50", autocomplete = "off" })
                                @Html.ValidationMessageFor(u => u.LastName, string.Empty)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-3 control-label">Email Id<b>:</b></div>
                            <div class="col-sm-6">
                                @Html.TextBoxFor(u => u.EmailID, new { @class = "form-control", @type = "email", @placeholder = "Enter email Id", @maxlength = "50", autocomplete = "off" })
                                @Html.ValidationMessageFor(u => u.EmailID, string.Empty)
                            </div>
                        </div>

                        <div class="buttons col-sm-6 ">
                            <button type="Submit" id="btnCreate" name="btnCreate">Search</button>
                            <button type="button" id="btnscd" name="btnscd" onclick="location.href='@Url.Action("ViewUser", "User")'">Reset</button>
                        </div>
                    </div>
                        

                        @if (!String.IsNullOrEmpty(@ViewBag.DeleteMessage))
                    {
                        if (object.ReferenceEquals(@ViewBag.Status, null))
                        {
                            <span class="login-row red field-validation-error">@ViewBag.DeleteMessage</span>
                        }
                        else
                        {
                            Session["StatusMessage"] = null;
                            Session["Status"] = null;

                        }
                    }
                    </div>


                <div class="col-sm-12">

                    <div class="data-table">

                        @grid.GetHtml(
                   tableStyle: "footable",
                 footerStyle: "gridFooter",
                        alternatingRowStyle: "alt",
                         htmlAttributes: new { id = "grdUsers" },
                         mode: WebGridPagerModes.All,
                       firstText: "<< First",
    previousText: "< Previous", nextText: "Next >",
    lastText: "Last >>",
                     columns: new[] {
                     grid.Column("UserName",header: "User Name", canSort: false),
                     grid.Column("FirstName",header: "First Name", canSort: false),
                     grid.Column("LastName",header: "Last Name", canSort: false),
                     grid.Column("EmailID",header: "Email ID", canSort: false),
                      grid.Column("EmployeeId",header: "Employee Id", canSort: false),     
                     grid.Column("UserPhone",header: "Phone No", canSort: false),
                      grid.Column("Name",header: "UserType", canSort: false),                  
                      grid.Column(header: "Option", format: @<text>

                        <a id="btnEdit" style="cursor:pointer;" onclick="EditUserData( @item.LoginId)">Edit</a>|
                        <a id="btnDelete" style="cursor:pointer;" onclick="DeleteUserData( @item.LoginId)">Delete</a>
                    </text>)
                })



                    </div>
                </div>

            </div>


        }
        <div class="clear"></div>


    </div>
</div>
