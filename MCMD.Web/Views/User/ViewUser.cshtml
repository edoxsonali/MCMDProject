@model MCMD.ViewModel.Administration.UserDetailsViewModel

@{
    ViewBag.Title = "ViewUser";
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}

@{

    int Pages = 20;
    WebGrid grid = new WebGrid(Model.GetViewUsers, canPage: true, rowsPerPage: Pages);
    grid.Pager(WebGridPagerModes.NextPrevious);
}
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>


<script type="text/javascript">

    //Delete User on click
    function DeleteUserData(varid) {
        if (varid != null) {
            if (confirm('Are you sure you want to delete the selected user')) {
                var deleteInputs = [];
                //$('.chkview:checked').each(function (i, chk) {
                deleteInputs.push(varid);
                //});
                var url = '@Url.Action("BatchDelete", "User")';
                $.ajax({
                    type: "POST",
                    async: false,
                    cache: false,
                    url: url,
                    traditional: true,
                    data: { deleteInputs: deleteInputs },
                    success: function (data) {
                        var url = '@Url.Action("ViewUser", "User")';
                        window.location.href = url;

                    }
                });
            }
        }
    }
    function EditUserData(varid) {
        if (varid != null) {
            if (confirm('Are you sure you want to edit the details of selected user')) {
                var Inputs = [];
                //$('.chkview:checked').each(function (i, chk) {
                Inputs.push(varid);
                //});
                var url = '@Url.Action("EditUserData", "User")';
                $.ajax({
                    type: "POST",
                    async: false,
                    cache: false,
                    url: url,
                    traditional: true,
                    data: { Id: Inputs },
                    success: function (data) {
                        // alert(data)
                        if (data.isRedirect == true) {
                            window.location = data.redirectUrl;
                        }
                        //  window.location.reload();
                    }
                });
            }
        }
    }


</script>

<!-- BEGIN PAGE CONTAINER-->
<div class="container-fluid">
    <!-- BEGIN PAGE HEADER-->
    <div class="row-fluid">
        <div class="span12">
            <!-- BEGIN STYLE CUSTOMIZER -->
            <div class="color-panel hidden-phone">
                <div class="color-mode-icons icon-color"></div>
                <div class="color-mode-icons icon-color-close"></div>
                <div class="color-mode">
                    <p>THEME COLOR</p>
                    <ul class="inline">
                        <li class="color-black current color-default" data-style="default"></li>
                        <li class="color-blue" data-style="blue"></li>
                        <li class="color-brown" data-style="brown"></li>
                        <li class="color-purple" data-style="purple"></li>
                        <li class="color-grey" data-style="grey"></li>
                        <li class="color-white color-light" data-style="light"></li>
                    </ul>
                    <label>
                        <span>Layout</span>
                        <select class="layout-option m-wrap small">
                            <option value="fluid" selected>Fluid</option>
                            <option value="boxed">Boxed</option>
                        </select>
                    </label>
                    <label>
                        <span>Header</span>
                        <select class="header-option m-wrap small">
                            <option value="fixed" selected>Fixed</option>
                            <option value="default">Default</option>
                        </select>
                    </label>
                    <label>
                        <span>Sidebar</span>
                        <select class="sidebar-option m-wrap small">
                            <option value="fixed">Fixed</option>
                            <option value="default" selected>Default</option>
                        </select>
                    </label>
                    <label>
                        <span>Footer</span>
                        <select class="footer-option m-wrap small">
                            <option value="fixed">Fixed</option>
                            <option value="default" selected>Default</option>
                        </select>
                    </label>
                </div>
            </div>
            <!-- END BEGIN STYLE CUSTOMIZER -->
            <h3 class="page-title"></h3>
            <ul class="breadcrumb">
                <li>
                    <i class="icon-home"></i>
                    <a href="">Home</a>
                    <span class="icon-angle-right"></span>
                </li>
                <li>
                    <a href="#">Manage User</a>
                    <span class="icon-angle-right"></span>
                </li>
                <li>
                    <a href="#">Manage Admin/COE</a>
                    <span class="icon-angle-right"></span>
                </li>

            </ul>
        </div>

    </div>
    <!-- END PAGE HEADER-->
    <!-- BEGIN PAGE CONTENT-->
    <div class="portlet box blue ">
        <div class="portlet-title">
            <div class="caption"><i class="icon-reorder"></i>Manage Admin/COE</div>

        </div>

        <div class="portlet-body form">
            <!-- BEGIN FORM-->
            @using (Html.BeginForm(Html.BeginForm("ViewUser", "User",
            new { ReturnUrl = ViewBag.ReturnUrl },
            FormMethod.Post, new { @class = "form-horizontal form-bordered" })))
            {

                @Html.ValidationSummary(true)


                <div class="control-group">
                    <label class="control-label">User Type</label>
                    <div class="controls">
                        @Html.DropDownListFor(m => m.RoleId, new SelectList(Model.Roles, "RoleId", "RoleName"),
                         "-Select-", new { @class = "m-wrap span6" })
                        @Html.ValidationMessageFor(m => m.RoleId, string.Empty, new { @class = "text-error" })
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label">Employee Id</label>
                    <div class="controls">
                        @Html.TextBoxFor(u => u.EmployeeId, new { @class = "m-wrap span12", @placeholder = "Enter Employee Id", @maxlength = "30", @autocomplete = "off" })
                        @Html.ValidationMessageFor(u => u.EmployeeId, string.Empty, new { @class = "text-error" })
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Phone No</label>
                    <div class="controls">
                        @Html.TextBoxFor(u => u.UserPhone, new { @class = "m-wrap span12", @type = "phone", @placeholder = "Enter Phone No format is{ 0123456789, 012-345-6789, (012)-345-6789 }", @maxlength = "15", @autocomplete = "off" })
                        @Html.ValidationMessageFor(u => u.UserPhone, string.Empty, new { @class = "text-error" })
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label">First Name</label>
                    <div class="controls">
                        @Html.TextBoxFor(u => u.FirstName, new { @class = "m-wrap span12", @placeholder = "Enter First Name", @maxlength = "30", autocomplete = "off" })
                        @Html.ValidationMessageFor(u => u.FirstName, string.Empty, new { @class = "text-error" })


                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Last Name</label>
                    <div class="controls">
                        @Html.TextBoxFor(u => u.LastName, new { @class = "m-wrap span12", @placeholder = "Enter Last Name", @maxlength = "30", autocomplete = "off" })
                        @Html.ValidationMessageFor(u => u.LastName, string.Empty, new { @class = "text-error" })
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Email ID</label>
                    <div class="controls">
                        @Html.TextBoxFor(u => u.EmailID, new { @class = "m-wrap span12", @type = "email", @placeholder = "Enter email Id", @maxlength = "50", autocomplete = "off" })
                        @Html.ValidationMessageFor(u => u.EmailID, string.Empty, new { @class = "text-error" })
                    </div>
                </div>

                <div class="form-actions">


                    <button type="Submit" id="btnCreate" name="btnCreate" class="btn blue">Search</button>
                    <button type="button" id="btnscd" class="btn" name="btnscd" onclick="location.href='@Url.Action("ViewUser", "User")'">Reset</button>
                </div>
            }



            <!-- END FORM-->
        </div>


    </div>
    <div class="portlet">

        <div class="portlet-body">

            @grid.GetHtml(
                                         tableStyle: "table table-striped table-bordered table-advance table-hover",
                     footerStyle: "gridFooter",
                            alternatingRowStyle: "alt",
                             htmlAttributes: new { id = "grdUsers" },
                             mode: WebGridPagerModes.All,
                           firstText: "<< First",
        previousText: "< Previous", nextText: "Next >",
        lastText: "Last >>",
                         columns: new[] {
                         grid.Column("UserName",header: "User Name", canSort: false),
                         grid.Column("FirstName",header: "First Name", canSort: false),
                         grid.Column("LastName",header: "Last Name", canSort: false),
                         grid.Column("EmailID",header: "Email ID", canSort: false),
                          grid.Column("EmployeeId",header: "Employee Id", canSort: false),
                         grid.Column("UserPhone",header: "Phone No", canSort: false),
                          grid.Column("RoleName",header: "User Type", canSort: false),
                          grid.Column(header: "Option", format: @<text>

                            <a id="btnEdit" style="cursor:pointer;" onclick="EditUserData( @item.LoginId)">Edit</a>|
                            <a id="btnDelete" style="cursor:pointer;" onclick="DeleteUserData( @item.LoginId)">Delete</a>
                        </text>)
                    })



        </div>


    </div>
    <!-- END PAGE CONTENT-->
</div>
<!-- END PAGE CONTAINER-->
@Scripts.Render("~/bundles/jqueryval")



