@model MCMD.ViewModel.Administration.UserVM
@using MCMD.EntityModel.Administration
@{
    ViewBag.Title = "User";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.reveal.js")"></script>
<link rel="stylesheet" href="@Url.Content("~/Content/reveal.css")" />
<script type="text/javascript" src="@Url.Content("~/Scripts/spin.min.js")"></script>


<div class="container">
    <div class="content">
        <h2>Create User</h2>
     
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()
            @ViewBag.Message 
            <div class="form">
                <div class="col-sm-5">
                    <hr>
                  
                    @Html.HiddenFor(u => u.User.CreatedID, new { @Value = Convert.ToInt32(ViewData["PageRole"]) })
                        @Html.HiddenFor(u => u.User.ModifiedID, new { @Value = Convert.ToInt32(ViewData["PageRole"]) })
                    <div class="form-group">
                        <div class="col-sm-4 control-label">First Name<span>*</span><b>:</b></div>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(u => u.User.FirstName, new { @class = "form-control", @placeholder = "Enter First Name", @maxlength = "30", @autocomplete = "off" })
                            @Html.ValidationMessageFor(u => u.User.FirstName, string.Empty)
                            <span id="RolelabelFirstName" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">First Name is required.</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-4 control-label">Last Name<span>*</span><b>:</b></div>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(u => u.User.LastName, new { @class = "form-control", @placeholder = "Enter Last Name", @maxlength = "30", @autocomplete = "off" })
                            @Html.ValidationMessageFor(u => u.User.LastName, string.Empty)
                            <span id="RolelabelLastName" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">Last Name is required.</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-4 control-label">Employee Id<span>*</span><b>:</b></div>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(u => u.User.EmployeeId, new { @class = "form-control", @type = "EmployeeId", @placeholder = "Enter Employee ID", @maxlength = "40", @autocomplete = "off" })
                            @Html.ValidationMessageFor(u => u.User.EmployeeId)
                            <span id="RolelabelEmailID" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">Employee Id is required.</span>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-sm-4 control-label">Password<span>*</span><b>:</b></div>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(u => u.User.Password, new { @type = "password", @class = "form-control", @placeholder = "Enter Password", @maxlength = "50", autocomplete = "off" })
                            @Html.ValidationMessageFor(u => u.User.Password)
                            <span id="RolelabelPassword" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">Password is required.</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-4 control-label">Confirm Password<span>*</span><b>:</b></div>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(u => u.User.ConfirmPassword, new { @type = "password", @class = "form-control", @placeholder = "Enter Confirm Password", @maxlength = "50", autocomplete = "off" })
                            @Html.ValidationMessageFor(u => u.User.ConfirmPassword)
                            <span id="RolelabelConfirmPassword" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">Confirm Password is required.</span>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-4 control-label">Email<span>*</span><b>:</b></div>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(u => u.User.EmailID, new { @class = "form-control", @type = "email", @placeholder = "Enter Email ID", @maxlength = "40", @autocomplete = "off" })
                            @Html.ValidationMessageFor(u => u.User.EmailID, string.Empty)
                            <span id="RolelabelEmailID" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">Email is required.</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-4 control-label">User Role<span>*</span><b>:</b></div>
                        <div class="col-sm-8">
                          
                            @Html.DropDownListFor(m => m.RoleId, new SelectList(Model.Roles, "Id", "Name"),
                                "-Select-", new { @class = "form-control" })
                            <span id="Rolelabel" style="display: none; color: #F00; font-weight: bold; font-size: 12px;">Role is required.</span>
                            
                        </div>
                    </div>
                  
                    @if (!String.IsNullOrEmpty(@ViewBag.StatusMessage))
                    {
                        if (object.ReferenceEquals(@ViewBag.Status, null))
                        {
                            <span class="login-row red field-validation-error">@ViewBag.StatusMessage</span>
                        }
                        else
                        {
                            <span id="uploadModal" class="reveal-modal">
                                <span class="login-row">
                                    @ViewBag.StatusMessage Click on @Html.ActionLink("View Users", "ViewUser", "User")
                                    to see all users or Click on @Html.ActionLink("Create User", "CreateUser", "User")
                                  
                                </span>
                            </span>
                        }
                    }
                  
                    <div class="buttons">
                        <button type="Submit" id="btnCreate" name="btnCreate">Create</button>
                        <button type="button" id="btnscd" name="btnscd">Cancel</button>
                    </div>
                </div>
            </div>
        }
        <div class="clear"></div>
    </div>
    <div id="loading">
        <div id="loadingcontent">
            <p id="loadingspinner">
                Please wait.........
            </p>
        </div>
    </div>
    
</div>
     @section Scripts
        {
           @Scripts.Render("~/bundles/jqueryval")
        }
<style type="text/css">
    #loading {
        display: none;
        position: fixed;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background: rgba(255,255,255,0.8);
        z-index: 1000;
    }

    #loadingcontent {
        display: table;
        position: fixed;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
    }

    #loadingspinner {
        display: table-cell;
        vertical-align: middle;
        width: 100%;
        text-align: center;
        font-size: larger;
        padding-top: 80px;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {

        //alert('reveal-modal fired');
        if ('@ViewBag.StatusMessage' != '') {
            $('#uploadModal').reveal({
                closeonbackgroundclick: false,
                dismissmodalclass: 'close-reveal-modal'
            });
            $("#loading").hide();
        }

        //btnscd-click event code
        $("#btnscd").click(function () {
            location.href = '@Url.Action("ViewUser", "User")';
        });


        //btnCreate-clicked event code
        $("#btnCreate").click(function () {
            // variables declared
            var checkflag = "Y";

          
                    
            if (checkflag == "Y") {
                $("#loading").fadeIn();
                var opts = {
                    lines: 12, // The number of lines to draw
                    length: 7, // The length of each line
                    width: 4, // The line thickness
                    radius: 10, // The radius of the inner circle
                    color: '#000', // #rgb or #rrggbb
                    speed: 1, // Rounds per second
                    trail: 60, // Afterglow percentage
                    shadow: false, // Whether to render a shadow
                    hwaccel: false // Whether to use hardware acceleration
                };
            }
            var target = document.getElementById('loading');
            var spinner = new Spinner(opts).spin(target);
        });



    });
    </script>

   

