@model MCMD.ViewModel.Administration.MediaDetailsViewModel
@{
    ViewBag.Title = "ViewMedia";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{

    int Pages = 10;
    WebGrid grid = new WebGrid(Model.MediaList, canPage: true, rowsPerPage: Pages);
    grid.Pager(WebGridPagerModes.NextPrevious);
}


<script type="text/javascript">

    //Delete User on click
    function DeleteUserData(varid) {
        if (varid != null) {
            if (confirm('Are you sure want to delete the selected user')) {
                var deleteInputs = [];
                //$('.chkview:checked').each(function (i, chk) {
                deleteInputs.push(varid);
                //});
                var url = '@Url.Action("BatchDelete", "Media")';
                $.ajax({
                    type: "POST",
                    async: false,
                    cache: false,
                    url: url,
                    traditional: true,
                    data: { deleteInputs: deleteInputs },
                    success: function (data) {
                        var url = '@Url.Action("ViewMedia", "Media")';
                        window.location.href = url;

                    }
                });
            }
        }
    }

</script>




<div class="container">
    <div class="content">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form">
                <div class="col-sm-12">
                    <div class="form-horizontal">
                      
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="data-table">

                            @grid.GetHtml(
                                           tableStyle: "footable",
                                         footerStyle: "gridFooter",
                                                alternatingRowStyle: "alt",
                                                 htmlAttributes: new { id = "grdUsers" },
                                                 mode: WebGridPagerModes.All,
                                               firstText: "<< First",
                            previousText: "< Previous", nextText: "Next >",
                            lastText: "Last >>",
                                             columns: new[] {
                                            // grid.Column("MediaId",header: "Media Id", canSort: false),
                                             grid.Column("LoginId",header: "Login Id", canSort: false),
                                             grid.Column("FolderFilePath",header: "Folder File Path", canSort: false),
                                             grid.Column("UploadType",header: "Upload Type", canSort: false),

                                              grid.Column(header: "Option", format: @<text>

                                                @*<a id="btnEdit" style="cursor:pointer;" onclick="EditUserData( @item.ID)">Edit</a>|*@
                                                <a id="btnDelete" style="cursor:pointer;" onclick="DeleteUserData( @item.MediaId)">Delete</a>
                                            </text>)
                                        })



                        </div>
           
                    </div>

                </div>
                
            </div>
        }
        <div class="clear"></div>
    </div>
</div>


